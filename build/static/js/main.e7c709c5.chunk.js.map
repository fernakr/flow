{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["md","MarkdownIt","Control","props","name","label","value","changeHandler","step","min","max","htmlFor","type","defaultValue","onChange","e","target","Controls","updateScaleFactor","scaleFactor","fontSize","updateFontSize","lineHeight","updateLineHeight","class","Input","setBody","body","setBodyFont","bodyFont","setHead","head","id","cols","rows","Content","style","fontFamily","dangerouslySetInnerHTML","__html","render","Head","App","useState","setScaleFactor","setLineHeight","setFontSize","updateElems","selectors","size","property","unit","forEach","item","className","currFontSize","selector","elements","document","querySelectorAll","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7c709c5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport MarkdownIt from 'markdown-it';\nconst md = new MarkdownIt();\n//import logo from './logo.svg';\n//import './App.css';\n\nfunction Control(props){\n  const { name, label, value, changeHandler, step, min, max } = props;\n  return (\n    <div>\n      <label htmlFor={ name }>{ label }</label>\n      <input step={ step } min={ min } max={ max } type=\"range\" defaultValue={ value } onChange={e => changeHandler(e.target.value) }/>\n    </div>\n  )\n}\n\nfunction Controls(props){\n  const { updateScaleFactor, scaleFactor, fontSize, updateFontSize, lineHeight, updateLineHeight } = props;\n  return (\n    <div class=\"controls\">\n      <Control\n        step={ 0.1}\n        min={1}\n        max={1.5}\n        label='Scale Factor'\n        name='scaleFactor'\n        value={ scaleFactor }\n        changeHandler={ updateScaleFactor } />\n         <Control\n        step={ 1 }\n        min={14}\n        max={20}\n        label='Font Size'\n        name='fontSize'\n        value={ fontSize }\n        changeHandler={ updateFontSize } />\n         <Control\n        step={0.1}\n        min={1}\n        max={1.8}\n        label='Line Height'\n        name='lineHeight'\n        value={ lineHeight }\n        changeHandler={ updateLineHeight } />\n    </div>\n  )\n}\n\nfunction Input(props) {\n  const { setBody, body, setBodyFont, bodyFont, setHead, head } = props;\n  return (\n    <form>\n      <label htmlFor=\"bodyFont\">Body Font</label>\n      <input type=\"text\" name=\"bodyFont\" id=\"bodyFont\" defaultValue={ bodyFont } onChange={ e => setBodyFont(e.target.value) }/>\n      <label htmlFor=\"head\">&lt;head&gt;</label>\n      <textarea name=\"head\" id=\"head\" cols=\"30\" rows=\"10\" defaultValue={ head } onChange={ e => setHead(e.target.value) }></textarea>\n      <label htmlFor=\"body\">&lt;body&gt;</label>\n      <textarea name=\"body\" id=\"body\" defaultValue={ body } onChange={ e => setBody(e.target.value) }></textarea>\n    </form>\n  )\n}\n\nfunction Content(props){\n  const { body, bodyFont } = props;\n  return (\n    <div style={{ fontFamily: bodyFont}}\n    dangerouslySetInnerHTML={{\n      __html: md.render(body)\n    }}></div>\n  )\n}\n\nfunction Head(props){\n  const { head } = props;\n\n  return (\n    <div>\n      <div\n      dangerouslySetInnerHTML={{\n        __html: head\n      }}></div>\n    </div>\n  )\n}\n\nfunction App() {\n  const [scaleFactor, setScaleFactor] = useState(1);\n  const [lineHeight, setLineHeight] = useState(1);\n  const [fontSize, setFontSize] = useState(16);\n  const [bodyFont, setBodyFont] = useState('Roboto');\n  const [head, setHead] = useState(`<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\">`);\n  const [body, setBody] = useState(`# Kitsch retro\n\n## Typewriter delectus cred\n\nBushwick Schlitz. Est Shoreditch small batch, dolor Schlitz sapiente twee stumptown ex. Duis Carles pickled, cornhole Thundercats McSweeney's minim PBR vegan Tumblr irony. Kogi eu Thundercats, sed scenester before they sold out et aesthetic. Elit cred Vice ethical pickled sartorial. Stumptown roof party freegan High Life vero, ea sed minim meggings.\n\n## Heading 2\n### Truffaut disrupt sartorial deserunt\n\nCosby sweater plaid shabby chic kitsch pour-over ex. Try-hard fanny pack mumblecore cornhole cray scenester. Assumenda narwhal occupy, Blue Bottle nihil culpa fingerstache. Meggings kogi vinyl meh, food truck banh mi Etsy magna 90's duis typewriter banjo organic leggings Vice.\n\n#### Fingerstache nesciunt lomo nostrud hoodie\n\n- Roof party put a bird on it incididunt sed umami craft beer cred.\n- Carles literally normcore, Williamsburg Echo Park fingerstache photo booth twee keffiyeh chambray whatever.\n- Scenester High Life Banksy, proident master cleanse tousled squid sriracha ad chillwave post-ironic retro.\n\n##### Heading 5\n\nLaboris selfies occaecat umami, forage Tumblr American Apparel. Retro Terry Richardson culpa id swag polaroid Intelligentsia American Apparel eu, esse non post-ironic fugiat master cleanse. Direct trade gluten-free blog, fanny pack cray labore skateboard before they sold out adipisicing non magna id Helvetica freegan. Disrupt aliqua Brooklyn church-key lo-fi dreamcatcher.\n`);\n\n\n  const updateElems = (selectors, size, property, unit = '') => {\n    selectors.forEach(item => {\n      item.style[property] = size + unit;\n    });\n  }\n\n\n  const updateScaleFactor = (value) => {\n    setScaleFactor(value);\n    let currFontSize = fontSize;\n    const selectors = ['h5', 'h4', 'h3', 'h2', 'h1'];\n\n    for (const selector of selectors){\n      const elements = document.querySelectorAll(selector);\n      updateElems(elements, currFontSize, 'fontSize', 'px');\n      currFontSize = currFontSize * value;\n    }\n\n  }\n  const updateFontSize = (value) => {\n    setFontSize(value);\n    const elements = document.querySelectorAll('p');\n    updateElems(elements, value, 'fontSize', 'px');\n  }\n  const updateLineHeight = (value) => {\n    setLineHeight(value);\n    const elements = document.querySelectorAll('p, h1, h2, h3, h4, h5, ul, ol');\n    console.log(value);\n    console.log(elements);\n    updateElems(elements, value, 'lineHeight');\n\n  }\n  return (\n    <div className=\"App\">\n      <Head head={ head }/>\n      <Controls\n        scaleFactor={ scaleFactor }\n        updateScaleFactor={ updateScaleFactor }\n        lineHeight={ lineHeight }\n        updateLineHeight={ updateLineHeight }\n        fontSize={ fontSize }\n        updateFontSize={ updateFontSize }\n        />\n\n      <div className=\"body\">\n        <Input\n          setHead={ setHead }\n          head= { head }\n          setBody={ setBody }\n          body={ body }\n          bodyFont={ bodyFont }\n          setBodyFont={ setBodyFont }/>\n        <Content\n          body={ body }\n          bodyFont={ bodyFont }/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}